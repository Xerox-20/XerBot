[null,{"name":"join","temp":"user","event-type":"6","actions":[{"info":"1","find":"nowy","storage":"1","varName":"kana≈Ç","name":"Find Channel"},{"server":"0","varName":"","info":"17","storage":"1","varName2":"kt√≥ry","name":"Store Server Things"},{"member":"2","varName":"user","info":"16","storage":"1","varName2":"avatar_URL","name":"Store Member Info"},{"title":"","author":"","color":"#00aaff","timestamp":"true","url":"","authorIcon":"","imageUrl":"","thumbUrl":"${tempVars(\"avatar_URL\")}","storage":"1","varName":"embed","name":"Create Embed Message"},{"storage":"1","varName":"embed","message":"**${tempVars(\"user\")}** jeste≈õ naszym: **${tempVars(\"kt√≥ry\")}** u≈ºytkownikiem!","name":"Set Embed Description"},{"storage":"1","varName":"embed","message":"üí¨","footerIcon":"","name":"Set Embed Footer"},{"storage":"1","varName":"embed","channel":"5","varName2":"kana≈Ç","name":"Send Embed Message"}],"_id":"jvRGu"},{"name":"reactionStart","temp":"","event-type":"1","_id":"Lwriz","actions":[{"storage":"3","varName":"reactionRoleInf","changeType":"0","value":"[]","name":"Control Variable"},{"behavior":"0","interpretation":"1","code":"const _this = this;\nconst fs = require('fs');\nvar someArray = [];\nvar someNum = 0;\nvar globalData;\nvar interval;\n\nfs.readFile('./data/globalVars.json', function read(err, data) {\n    if (err) {\n        throw err;\n    }\n    var savedVars = JSON.parse(data);\n    \n    if (savedVars.hasOwnProperty('tempData')) {\n        var newThing = savedVars.tempData.replace(/[\\\\]/g,'');\n        try {\n            _this.storeValue(JSON.parse(newThing), 3, 'reactionRoleInf', cache);\n            console.log('Saved reactionRoleInf');\n        } catch (e) {\n            console.log('Invalid JSON - Saved Vars')\n        }\n    }\n\n    if(fs.existsSync('./resources/serverRoleMenu.json')) {\n        fs.readFile('./resources/serverRoleMenu.json', async function read(err, data) {\n            if (err) {\n                throw err;\n            }\n            var DataToLoop = JSON.parse(data);\n            globalData = DataToLoop;\n            for (var key in DataToLoop) {\n                if (DataToLoop.hasOwnProperty(key)) {\n                    await someArray.push(DataToLoop[key]);\n                }\n            }\n            interval = setInterval(fetchMessages, 2000);\n        })\n\n    } else {\n        fs.writeFile(\"./resources/serverRoleMenu.json\", \"{}\", function(err) {\n            if(err) {\n                return console.log(err);\n            }\n        });\n    }\n});\n\nfunction fetchMessages() {\n if (someNum != someArray.length) {\n     var channelToFetch = client.channels.get(someArray[someNum]);\n     if (channelToFetch != null) {\n        channelToFetch.fetchMessages({ limit: 100 });\n        console.log(`Fetched messages in channel id ${someArray[someNum]}`);\n        someNum = someNum + 1;\n     } else {\n        delete globalData[someArray[someNum]];\n        fs.writeFile(\"./resources/serverRoleMenu.json\", JSON.stringify(globalData), function(err) {\n            if(err) {\n                return console.log(err);\n            }\n        }); \n     }\n } else {\n    console.log('Finished fetching messages from all logged servers.')\n    clearInterval(interval);\n }\n}","storage":"0","varName":"","name":"Run Script"}]},{"name":"reactionRev","temp":"msgReaction","event-type":"29","_id":"ZQmhC","actions":[{"reaction":"1","varName":"msgReaction","info":"0","storage":"1","varName2":"messageRct","name":"Store Reaction Info"},{"behavior":"1","interpretation":"1","code":"const reaction = tempVars('msgReaction');\nconst msgRct = tempVars('messageRct');\nconst rectarray = globalVars('reactionRoleInf');\nvar usrWhoReacted = reaction.users.array();\nconst _this = this;\nvar messageSent = 'Successfully added the role {roleName} in {server}'; \n// The only variables that work rn, {rolename} and {server}\nvar actualUser;\n// Setings\n\nconst dmUserAfter = true; // Default, can be changed to false\n\n//\n\nasync function checkRoles() {\n\tfor (i = 0; i < rectarray.length; i++) {\n\t\tif (rectarray[i][msgRct.id] != null) {\n            arrayNum = i;\n\t\t\tif (rectarray[i][msgRct.id][3] != null) {\n\t\t\t\tusrWhoReacted = rectarray[i][msgRct.id][3].filter(val => !usrWhoReacted.includes(val))[0];\n\t\t\t\tif (usrWhoReacted != null) {\n\t\t\t\t\tif (usrWhoReacted.data('cooldownData.reactionMenu') != 1) {\n\t\t\t\t\t\tvar newArr = rectarray[i][msgRct.id];\n\t\t\t\t\t\tfor (io = 0; io < newArr.length; io++) {\n\t\t\t\t\t\t\tif (newArr[io][0] == reaction.emoji.name) {\n\t\t\t\t\t\t\t\tvar newUsr = await msgRct.guild.fetchMember(usrWhoReacted);\n\t\t\t\t\t\t\t\tvar checkRole = await msgRct.guild.roles.get(newArr[io][1]);\n\t\t\t\t\t\t\t\tif (checkRole != null) {\n\t\t\t\t\t\t\t\t\tif (!newUsr.roles.has(newArr[io][1])) {\n                                        usrWhoReacted.setData('cooldownData.reactionMenu', '1');\n                                        var tempThing = globalVars('reactionRoleInf');\n\t\t\t\t\t\t\t\t\t    tempThing[i][msgRct.id][3] = await reaction.users.array();\n                                        _this.storeValue(tempThing, 3, 'reactionRoleInf', cache);\n                                        interval = setInterval(resetTimer, 1000);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t} else {\n                                        var tempThing = globalVars('reactionRoleInf');\n                                        usrWhoReacted.setData('cooldownData.reactionMenu', '1');\n\t\t\t\t\t\t\t\t\t\ttempThing[i][msgRct.id][3] = await reaction.users.array();\n\t\t\t\t\t\t\t\t\t\t_this.storeValue(tempThing, 3, 'reactionRoleInf', cache)\n\t\t\t\t\t\t\t\t\t\tnewUsr.removeRole(newArr[io][1]);\n\t\t\t\t\t\t\t\t\t\tif (dmUserAfter) {\n\t\t\t\t\t\t\t\t\t\t\tmessageSent = messageSent.replace(/{roleName}/g, newArr[io][2]);\n                                            messageSent = messageSent.replace(/{server}/g, msgRct.guild.name);\n\t\t\t\t\t\t\t\t\t\t    newUsr.send(messageSent);\n                                        }\n                                        interval = setInterval(resetTimer, 1000);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n                                    var newArray = rectarray.filter(someItem => {\n                                        someItem.hasOwnProperty(msgRct.id) != true\n                                    })\n                                    _this.storeValue(newArray, 3, 'reactionRoleInf', cache);\n                                    _this.storeValue(JSON.stringify(newArray), 3, 'tempData', cache);\n\t\t\t\t\t\t\t\t\tmsgRct.edit({\n\t\t\t\t\t\t\t\t\t\tembed: {\n\t\t\t\t\t\t\t\t\t\t\tcolor: 0xff0000,\n\t\t\t\t\t\t\t\t\t\t\ttitle: \"Role Reaction Menu\",\n\t\t\t\t\t\t\t\t\t\t\tdescription: `An error has occured.\\nOne of the roles, role name - ${newArr[io][2]} does not exist anymore.\\nIn turn, this embed has now shutdown.\\nPlease remake the embed.`,\n\t\t\t\t\t\t\t\t\t\t\ttimestamp: new Date()\n\t\t\t\t\t\t\t\t\t\t}\n                                    });\n                                    _this.callNextAction(cache);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n                        usrWhoReacted.setData('cooldownData.reactionMenu', '0');\n                    }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}\n\nfunction resetTimer() {\n    usrWhoReacted.setData('cooldownData.reactionMenu', '0');\n    clearInterval(interval);\n}\n\ncheckRoles();","storage":"0","varName":"","name":"Run Script"},{"storage":"3","varName":"tempData","name":"Save Variable"}]},{"name":"reactionGet","temp":"msgReaction","event-type":"28","_id":"zimku","actions":[{"reaction":"1","varName":"msgReaction","info":"0","storage":"1","varName2":"messageRct","name":"Store Reaction Info"},{"behavior":"1","interpretation":"1","code":"const reaction = tempVars('msgReaction');\nconst msgRct = tempVars('messageRct');\nconst rectarray = globalVars('reactionRoleInf');\nvar usrWhoReacted = reaction.users.last();\nconst _this = this;\nvar messageSent = 'Successfully added the role {roleName} in {server}'; \nvar interval;\nvar arrayNum;\n\n// Setings\n\nconst dmUserAfter = true; // Default, can be changed to false\n\n//\n\nasync function checkRoles() {\n\tif (usrWhoReacted.id != client.user.id) {\n\t\tif (usrWhoReacted.data('cooldownData.reactionMenu') != 1) {\n\t\t\tfor (i = 0; i < rectarray.length; i++) {\n\t\t\t\tif (rectarray[i][msgRct.id] != null) {\n                    arrayNum = i;\n\t\t\t\t\tvar newArr = rectarray[i][msgRct.id];\n\t\t\t\t\tfor (io = 0; io < newArr.length; io++) {\n\t\t\t\t\t\tif (newArr[io][0] == reaction.emoji.name) {\n\t\t\t\t\t\t\tvar newUsr = await msgRct.guild.fetchMember(usrWhoReacted);\n\t\t\t\t\t\t\tvar checkRole = await msgRct.guild.roles.get(newArr[io][1])\n\t\t\t\t\t\t\tif (checkRole != null) {\n\t\t\t\t\t\t\t\tif (newUsr.roles.has(newArr[io][1])) {\n                                    usrWhoReacted.setData('cooldownData.reactionMenu', '1');\n\t\t\t\t\t\t\t\t\tvar tempThing = globalVars('reactionRoleInf');\n\t\t\t\t\t\t\t\t\ttempThing[i][msgRct.id][3] = await reaction.users.array();\n                                    _this.storeValue(tempThing, 3, 'reactionRoleInf', cache)\n                                    interval = setInterval(resetTimer, 1000)\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t} else {\n                                    usrWhoReacted.setData('cooldownData.reactionMenu', '1');\n\t\t\t\t\t\t\t\t\tvar tempThing = globalVars('reactionRoleInf');\n\t\t\t\t\t\t\t\t\ttempThing[i][msgRct.id][3] = await reaction.users.array();\n\t\t\t\t\t\t\t\t\t_this.storeValue(tempThing, 3, 'reactionRoleInf', cache)\n\t\t\t\t\t\t\t\t\tnewUsr.addRole(newArr[io][1]);\n\t\t\t\t\t\t\t\t\tif (dmUserAfter) {\n                                        messageSent = messageSent.replace(/{roleName}/g, newArr[io][2]);\n                                        messageSent = messageSent.replace(/{server}/g, msgRct.guild.name);\n\t\t\t\t\t\t\t\t\t\tnewUsr.send(messageSent);\n                                    }\n                                    interval = setInterval(resetTimer, 1000)\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n                                var newArray = rectarray.filter(someItem => {\n                                    someItem.hasOwnProperty(msgRct.id) != true\n                                })\n                                _this.storeValue(newArray, 3, 'reactionRoleInf', cache);\n                                _this.storeValue(JSON.stringify(newArray), 3, 'tempData', cache);\n\t\t\t\t\t\t\t\tmsgRct.edit({\n\t\t\t\t\t\t\t\t\tembed: {\n\t\t\t\t\t\t\t\t\t\tcolor: 0xff0000,\n\t\t\t\t\t\t\t\t\t\ttitle: \"Role Reaction Menu\",\n\t\t\t\t\t\t\t\t\t\tdescription: `An error has occured.\\nOne of the roles, role name - ${newArr[io][2]} does not exist anymore.\\nIn turn, this embed has now shutdown.\\nPlease remake the embed.`,\n\t\t\t\t\t\t\t\t\t\ttimestamp: new Date()\n\t\t\t\t\t\t\t\t\t}\n                                });\n                                _this.callNextAction(cache);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n            usrWhoReacted.setData('cooldownData.reactionMenu', '0');\n        }\n\t}\n\n}\n\nfunction resetTimer() {\n    usrWhoReacted.setData('cooldownData.reactionMenu', '0');\n    clearInterval(interval);\n}\n\ncheckRoles();","storage":"0","varName":"","name":"Run Script"},{"storage":"3","varName":"tempData","name":"Save Variable"}]},{"name":"LoadServerPrefixes","temp":"","event-type":"1","_id":"LoadSubs","actions":[{"behavior":"1","interpretation":"0","code":"// Make sure it only runs once!!\n//------------\n\nif(!globalVars(\"server_prefixes_loaded\")){ \n  this.callNextAction(cache);\n  this.storeValue(true, 3,\"server_prefixes_loaded\", cache);\n}","storage":"0","varName":"","name":"Run Script"},{"behavior":"0","interpretation":"0","code":"Bot.prefixes = {};\nconsole.log('(Server Prefixes) Initiating Server Prefixes....');\nBot.checkCommand = function(msg) {\n\tconst fs = require(\"fs\");\n\tconst path = require(\"path\");\n\n\ttry {\n\t\tconst defaultTag = Files.data.settings.tag;\n\t\tconst separator = Files.data.settings.separator || '\\\\s+';\n\t\n\t\tlet content = msg.content;\n\t\tlet guild = msg.guild;\n\t\n\t\tcontent = content.split(new RegExp(separator))[0];\n\t\n\t\tconst filePath = path.join(\"data\",\"serverPrefixes.json\");\t\t\n\t\tif(fs.existsSync(filePath)){\n\t\t\tlet saved_prefixes = fs.readFileSync(filePath, \"utf8\");\n\t\t\ttry {\n\t\t\t\tthis.prefixes = JSON.parse(saved_prefixes);\t\t\n\t\t\t} catch(err){}\t\t\t\n\t\t}else{\n\t\t\tthis.prefixes[guild.id] = defaultTag;\n\t\t\tfs.writeFileSync(filePath, JSON.stringify(this.prefixes));\n\t\t}\n\n\t\tlet tag = this.prefixes[guild.id] || defaultTag;\n\n                if(Array.isArray(this.prefixes)){ \n                  console.log(\"Old version serverPrefixes.json detected.  Please remove serverPrefixes.json and restart your bot otherwise setting new prefixes will not work!\")\n                  tag = defaultTag;\n                }\n\n\t\tif(tag){\t\n\t\t\tif(guild) guild.tag = tag;\t\n\n\t\t\tif(content.startsWith(tag)) {\t\t\t\t\n\t\t\t\tlet command = content.substring(tag.length);\n\t\t\t\tif(command) {       \n\t\t\t\t\tif(!Bot._caseSensitive) {\n\t\t\t\t\t\tcommand = command.toLowerCase();\n\t\t\t\t\t}\n\t\t\t\t\tconst cmd = Bot.$cmds[command];\n\t\t\t\t\tif(cmd) {\t\t\t\t\t\n\t\t\t\t\t\tActions.preformActions(msg, cmd);\n\t\t\t\t\t}\n\t\t\t\t}\t\t\t\t\n\t\t\t}\n\t\t}\t\t\t\n\t} catch (e) {\n\t\tconsole.error(e);\n\t}\n   \n};\nconsole.log('(Server Prefixes) Loaded Function Overwrite: CheckCommand');\n","storage":"2","varName":"prefixbota","name":"Run Script"}]},{"name":"NewEvent","temp":"","event-type":"38","_id":"puahq","actions":[]},{"name":"OnJoinPvMessage","temp":"joinserwerpvmessage","event-type":"6","_id":"SRGNV","actions":[]},{"name":"wiadliczenieserwer","temp":"wiadomo≈õci na serwerze","event-type":"2","_id":"gblfg","actions":[]},{"name":"u≈ºytkownikwiadomo≈õci","temp":"u≈ºytkownik wiadomo≈õci liczenie","event-type":"2","_id":"MGFdX","actions":[{"member":"3","varName":"u≈ºytkownik wiadomo≈õci liczenie","dataName":"u≈ºytkownikwiadomo≈õci","changeType":"1","value":"1","name":"Control Member Data"}]},{"name":"leave","temp":"user","event-type":"7","_id":"whvYQ","actions":[{"info":"1","find":"‚úãpo≈ºegnania","storage":"1","varName":"kana≈Ç","name":"Find Channel"},{"server":"0","varName":"","info":"17","storage":"1","varName2":"ile","name":"Store Server Info"},{"member":"2","varName":"user","info":"16","storage":"1","varName2":"avatar_URL","name":"Store Member Info"},{"title":"","author":"","color":"#ff2a00","timestamp":"true","url":"","authorIcon":"","imageUrl":"","thumbUrl":"${tempVars(\"avatar_URL\")}","storage":"1","varName":"embed","name":"Create Embed Message"},{"storage":"1","varName":"embed","fieldName":"≈ªegnamy","message":"**${tempVars(\"user\")}** wyszed≈Ç z naszego serwera, jest nas teraz: **${tempVars(\"ile\")}**","inline":"1","name":"Add Embed Field"},{"storage":"1","varName":"embed","channel":"5","varName2":"kana≈Ç","name":"Send Embed Message"},{"storage":"1","varName":"embed","message":"üí¨","footerIcon":"","name":"Set Embed Footer"}]},{"name":"Wgrze","temp":"","event-type":"1","_id":"vJWtn","actions":[{"info":"3","storage":"1","varName2":"serwery","name":"Store Bot Client Info"},{"activity":"1","nameText":"/help | serwery: ${tempVars(\"serwery\")}","url":"","stat":"0","name":"Set Bot Activity"}]},{"name":"MessageLvl","permissions":"NONE","restriction":"1","_id":"lvlEvent","actions":[{"comment":"<b>===========< DANE >===========</b>","color":"#ffff00","name":"Comment"},{"comment":"<b>Generowanie randomowego xp</b>","color":"#00ff00","name":"Comment"},{"comment":"<b>Tutaj mo≈ºesz zmieniƒá ilo≈õƒá dodawania xp</b>","color":"#ff8080","name":"Comment"},{"storage":"1","varName":"RandXpNum","min":"5","max":"15","name":"Generate Random Number"},{"comment":"<b>Zapisywanie danych do zmiennych</b>","color":"#00ff00","name":"Comment"},{"member":"1","varName":"","dataName":"xp","defaultVal":"0","storage":"1","varName2":"xpVar","name":"Store Member Data"},{"member":"1","varName":"","dataName":"xpMax","defaultVal":"250","storage":"1","varName2":"xpMaxVar","name":"Store Member Data"},{"member":"1","varName":"","dataName":"lvl","defaultVal":"1","storage":"1","varName2":"lvlVar","name":"Store Member Data"},{"comment":"<b>Dodawanie random xp do member daty \"xp\"</b>","color":"#00ff00","name":"Comment"},{"member":"","varName":"","dataName":"xp","changeType":"1","value":"tempVars(\"RandXpNum\")","name":"Control Member Data"},{"comment":"<b>===========< AWANS >===========</b>","color":"#ffff00","name":"Comment"},{"comment":"<b>sprawdzanie czy u≈ºytkownik ma tyle samo xp co max xp</b>","color":"#00ff00","name":"Comment"},{"member":"1","varName":"","dataName":"xp","comparison":"4","value":"tempVars(\"xpMaxVar\")","iftrue":"0","iftrueVal":"","iffalse":"1","iffalseVal":"5","name":"Check Member Data"},{"comment":"<b>reset xp na 0</b>","color":"#00ff00","name":"Comment"},{"member":"1","varName":"","dataName":"xp","changeType":"0","value":"0","name":"Control Member Data"},{"comment":"<b>dodawanie max xp o 250</b>","color":"#00ff00","name":"Comment"},{"member":"1","varName":"","dataName":"xpMax","changeType":"1","value":"250","name":"Control Member Data"},{"comment":"<b>dodawanie lvl o 1</b>","color":"#00ff00","name":"Comment"},{"member":"1","varName":"","dataName":"lvl","changeType":"1","value":"1","name":"Control Member Data"},{"comment":"<b>Ni≈ºej jest wysy≈Çanie wiadomo≈õci o awansie. Mo≈ºesz je usunƒÖƒá</b>","color":"#ff8080","name":"Comment"},{"comment":"<b>je≈õli nie chesz, aby bot wysy≈Ça≈Ç powiadomienia o awansie</b>","color":"#ff8080","name":"Comment"},{"comment":"<b>zapisywanie member daty \"lvl\" do zmiennej \"lvlVar\"</b>","color":"#00ff00","name":"Comment"},{"member":"1","varName":"","dataName":"lvl","defaultVal":"1","storage":"1","varName2":"lvlVar","name":"Store Member Data"},{"comment":"<b>wysy≈Çanie informacji o awansie na pv</b>","color":"#00ff00","name":"Comment"},{"comment":"<b>Je≈õli chcesz mo≈ºesz zmieniƒá, aby wysy≈Ça≈Ço na jaki≈õ kana≈Ç</b>","color":"#ff8080","name":"Comment"},{"comment":"<b>lub kana≈Ç ostatniej wiadomo≈õci</b>","color":"#ff8080","name":"Comment"},{"channel":"1","varName":"","message":"${member} awansowa≈Çe≈õ/a≈õ na nastƒôpny level! Masz teraz **`${tempVars(\"lvlVar\")}`** lvl!","storage":"0","varName2":"","name":"Send Message"}],"comType":"3","event-type":"0"},{"name":"NewEvent","temp":"","event-type":"0","_id":"vbMrR","actions":[]},{"name":"UsuniƒôcieWiadomo≈õci","temp":"wiadomo≈õƒá_usuniƒôta","event-type":"18","_id":"Xmxyx","actions":[{"member":"2","varName":"wiadomo≈õƒá_usuniƒôta","info":"6","storage":"1","varName2":"usuniƒôta_wiadomo≈õƒá","name":"Store Member Info"},{"title":"Usuniƒôta wiadomo≈õƒá:","author":"${member.user.username}","color":"","timestamp":"true","url":"","authorIcon":"${member.user.avatarURL}","imageUrl":"","thumbUrl":"${member.user.avatarURL}","storage":"1","varName":"embed","name":"Create Embed Message"},{"storage":"1","varName":"embed","message":"${tempVars(\"usuniƒôta_wiadomo≈õƒá\")}","name":"Set Embed Description"},{"storage":"1","varName":"embed","channel":"4","varName2":"","storage3":"0","varName3":"","name":"Send Embed Message"}]},{"name":"NewEvent","temp":"","event-type":"2","_id":"QVrEC","actions":[]}]